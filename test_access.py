#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ Kleinanzeigen
"""

import requests
from bs4 import BeautifulSoup
import json

def test_kleinanzeigen_access():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ kleinanzeigen.de"""
    
    print("=" * 60)
    print("–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Kleinanzeigen")
    print("=" * 60)
    
    # –ß–∏—Ç–∞–µ–º URL –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    try:
        with open('config.json', 'r', encoding='utf-8') as f:
            config = json.load(f)
    except FileNotFoundError:
        with open('config.example.json', 'r', encoding='utf-8') as f:
            config = json.load(f)
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π URL –¥–ª—è kleinanzeigen
    search_urls = config.get('search_urls', [])
    kleinanzeigen_url = None
    for url in search_urls:
        if 'kleinanzeigen.de' in url:
            kleinanzeigen_url = url
            break
    
    if not kleinanzeigen_url:
        print("‚ùå URL –¥–ª—è Kleinanzeigen –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥–µ")
        return
    
    print(f"\nüìç URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {kleinanzeigen_url}\n")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é —Å headers
    session = requests.Session()
    session.headers.update({
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
        'Accept-Language': 'de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7',
        'Accept-Encoding': 'gzip, deflate, br',
        'Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1',
        'Sec-Fetch-Dest': 'document',
        'Sec-Fetch-Mode': 'navigate',
        'Sec-Fetch-Site': 'none',
        'Sec-Fetch-User': '?1',
        'DNT': '1'
    })
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    print("üîç –¢–µ—Å—Ç 1: –î–æ—Å—Ç—É–ø –∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ kleinanzeigen.de...")
    try:
        response = session.get('https://www.kleinanzeigen.de/', timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        if response.status_code == 200:
            print("   ‚úÖ –î–æ—Å—Ç—É–ø –∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–ª—É—á–µ–Ω")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: HTTP {response.status_code}")
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
        text_lower = response.text.lower()
        blocking_keywords = ['captcha', 'access denied', 'blocked', 'cloudflare', 'bot detection']
        found_blocks = [kw for kw in blocking_keywords if kw in text_lower]
        
        if found_blocks:
            print(f"   ‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–∏–∑–Ω–∞–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {', '.join(found_blocks)}")
            print(f"   üìÑ –ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤ –æ—Ç–≤–µ—Ç–∞:")
            print(f"   {response.text[:500]}")
        else:
            print("   ‚úÖ –ü—Ä–∏–∑–Ω–∞–∫–æ–≤ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    print("üîç –¢–µ—Å—Ç 2: –î–æ—Å—Ç—É–ø –∫ –ø–æ–∏—Å–∫–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ...")
    try:
        response = session.get(kleinanzeigen_url, timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        if response.status_code == 200:
            print("   ‚úÖ –î–æ—Å—Ç—É–ø –∫ –ø–æ–∏—Å–∫–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–ª—É—á–µ–Ω")
            
            # –ü–∞—Ä—Å–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            soup = BeautifulSoup(response.text, 'html.parser')
            
            # –ò—â–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ä–∞–∑–Ω—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º
            selectors = [
                ('article h2 a', 'article h2 a'),
                ('a[href*="/s-anzeige/"]', '—Å—Å—ã–ª–∫–∏ —Å /s-anzeige/'),
                ('.aditem-main a', '.aditem-main a'),
                ('article', '—Ç–µ–≥–∏ <article>'),
                ('.aditem', '—ç–ª–µ–º–µ–Ω—Ç—ã —Å –∫–ª–∞—Å—Å–æ–º .aditem')
            ]
            
            print("\n   üìä –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–π:")
            for selector, description in selectors:
                elements = soup.select(selector)
                count = len(elements)
                if count > 0:
                    print(f"   ‚úÖ {description}: –Ω–∞–π–¥–µ–Ω–æ {count} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                else:
                    print(f"   ‚ùå {description}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            print("\n   üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")
            print(f"   - –ù–∞–π–¥–µ–Ω–æ —Ç–µ–≥–æ–≤ <article>: {len(soup.find_all('article'))}")
            print(f"   - –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫ –≤—Å–µ–≥–æ: {len(soup.find_all('a'))}")
            print(f"   - –ù–∞–π–¥–µ–Ω–æ —Ç–µ–≥–æ–≤ <h1>: {len(soup.find_all('h1'))}")
            print(f"   - –ù–∞–π–¥–µ–Ω–æ —Ç–µ–≥–æ–≤ <h2>: {len(soup.find_all('h2'))}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            with open('/tmp/kleinanzeigen_page.html', 'w', encoding='utf-8') as f:
                f.write(response.text)
            print("\n   üíæ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ /tmp/kleinanzeigen_page.html")
            
        elif response.status_code == 403:
            print("   ‚ùå –û—à–∏–±–∫–∞ 403 Forbidden - –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
            print("   üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("      - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ IP")
            print("      - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞–∫ –±–æ—Ç")
            print("      - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–∫—Å–∏")
        elif response.status_code == 429:
            print("   ‚ùå –û—à–∏–±–∫–∞ 429 Too Many Requests - —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: HTTP {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 60)
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    print("=" * 60)

if __name__ == '__main__':
    test_kleinanzeigen_access()
